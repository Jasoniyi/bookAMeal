{"version":3,"sources":["../../../../../../node_modules/@babel/generator/lib/node/index.js"],"names":["Object","defineProperty","exports","value","needsWhitespace","needsWhitespaceBefore","needsWhitespaceAfter","needsParens","whitespace","_interopRequireWildcard","require","parens","t","data","obj","__esModule","newObj","key","prototype","hasOwnProperty","call","desc","getOwnPropertyDescriptor","get","set","default","expandAliases","add","type","func","fn","node","parent","stack","result","keys","aliases","FLIPPED_ALIAS_KEYS","alias","expandedParens","expandedWhitespaceNodes","nodes","expandedWhitespaceList","list","find","printStack","isOrHasCallExpression","isCallExpression","isMemberExpression","object","computed","property","isExpressionStatement","expression","linesInfo","items","i","length","isNewExpression","callee"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.needsWhitespace = needsWhitespace;\nexports.needsWhitespaceBefore = needsWhitespaceBefore;\nexports.needsWhitespaceAfter = needsWhitespaceAfter;\nexports.needsParens = needsParens;\n\nvar whitespace = _interopRequireWildcard(require(\"./whitespace\"));\n\nvar parens = _interopRequireWildcard(require(\"./parentheses\"));\n\nfunction t() {\n  const data = _interopRequireWildcard(require(\"@babel/types\"));\n\n  t = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction expandAliases(obj) {\n  const newObj = {};\n\n  function add(type, func) {\n    const fn = newObj[type];\n    newObj[type] = fn ? function (node, parent, stack) {\n      const result = fn(node, parent, stack);\n      return result == null ? func(node, parent, stack) : result;\n    } : func;\n  }\n\n  for (const type of Object.keys(obj)) {\n    const aliases = t().FLIPPED_ALIAS_KEYS[type];\n\n    if (aliases) {\n      for (const alias of aliases) {\n        add(alias, obj[type]);\n      }\n    } else {\n      add(type, obj[type]);\n    }\n  }\n\n  return newObj;\n}\n\nconst expandedParens = expandAliases(parens);\nconst expandedWhitespaceNodes = expandAliases(whitespace.nodes);\nconst expandedWhitespaceList = expandAliases(whitespace.list);\n\nfunction find(obj, node, parent, printStack) {\n  const fn = obj[node.type];\n  return fn ? fn(node, parent, printStack) : null;\n}\n\nfunction isOrHasCallExpression(node) {\n  if (t().isCallExpression(node)) {\n    return true;\n  }\n\n  if (t().isMemberExpression(node)) {\n    return isOrHasCallExpression(node.object) || !node.computed && isOrHasCallExpression(node.property);\n  } else {\n    return false;\n  }\n}\n\nfunction needsWhitespace(node, parent, type) {\n  if (!node) return 0;\n\n  if (t().isExpressionStatement(node)) {\n    node = node.expression;\n  }\n\n  let linesInfo = find(expandedWhitespaceNodes, node, parent);\n\n  if (!linesInfo) {\n    const items = find(expandedWhitespaceList, node, parent);\n\n    if (items) {\n      for (let i = 0; i < items.length; i++) {\n        linesInfo = needsWhitespace(items[i], node, type);\n        if (linesInfo) break;\n      }\n    }\n  }\n\n  if (typeof linesInfo === \"object\" && linesInfo !== null) {\n    return linesInfo[type] || 0;\n  }\n\n  return 0;\n}\n\nfunction needsWhitespaceBefore(node, parent) {\n  return needsWhitespace(node, parent, \"before\");\n}\n\nfunction needsWhitespaceAfter(node, parent) {\n  return needsWhitespace(node, parent, \"after\");\n}\n\nfunction needsParens(node, parent, printStack) {\n  if (!parent) return false;\n\n  if (t().isNewExpression(parent) && parent.callee === node) {\n    if (isOrHasCallExpression(node)) return true;\n  }\n\n  return find(expandedParens, node, parent, printStack);\n}"],"file":"index.js"}
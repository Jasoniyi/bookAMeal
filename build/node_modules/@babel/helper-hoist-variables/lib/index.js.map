{"version":3,"sources":["../../../../../node_modules/@babel/helper-hoist-variables/lib/index.js"],"names":["Object","defineProperty","exports","value","default","_default","t","data","_interopRequireWildcard","require","obj","__esModule","newObj","key","prototype","hasOwnProperty","call","desc","getOwnPropertyDescriptor","get","set","visitor","Scope","path","state","kind","skip","Function","VariableDeclaration","node","nodes","declarations","firstId","declar","id","init","push","expressionStatement","assignmentExpression","name","keys","getBindingIdentifiers","emit","identifier","parentPath","isFor","left","replaceWith","replaceWithMultiple","traverse"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,QAAlB;;AAEA,SAASC,CAAT,GAAa;AACX,QAAMC,IAAI,GAAGC,uBAAuB,CAACC,OAAO,CAAC,cAAD,CAAR,CAApC;;AAEAH,EAAAA,CAAC,GAAG,YAAY;AACd,WAAOC,IAAP;AACD,GAFD;;AAIA,SAAOA,IAAP;AACD;;AAED,SAASC,uBAAT,CAAiCE,GAAjC,EAAsC;AAAE,MAAIA,GAAG,IAAIA,GAAG,CAACC,UAAf,EAA2B;AAAE,WAAOD,GAAP;AAAa,GAA1C,MAAgD;AAAE,QAAIE,MAAM,GAAG,EAAb;;AAAiB,QAAIF,GAAG,IAAI,IAAX,EAAiB;AAAE,WAAK,IAAIG,GAAT,IAAgBH,GAAhB,EAAqB;AAAE,YAAIV,MAAM,CAACc,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCN,GAArC,EAA0CG,GAA1C,CAAJ,EAAoD;AAAE,cAAII,IAAI,GAAGjB,MAAM,CAACC,cAAP,IAAyBD,MAAM,CAACkB,wBAAhC,GAA2DlB,MAAM,CAACkB,wBAAP,CAAgCR,GAAhC,EAAqCG,GAArC,CAA3D,GAAuG,EAAlH;;AAAsH,cAAII,IAAI,CAACE,GAAL,IAAYF,IAAI,CAACG,GAArB,EAA0B;AAAEpB,YAAAA,MAAM,CAACC,cAAP,CAAsBW,MAAtB,EAA8BC,GAA9B,EAAmCI,IAAnC;AAA2C,WAAvE,MAA6E;AAAEL,YAAAA,MAAM,CAACC,GAAD,CAAN,GAAcH,GAAG,CAACG,GAAD,CAAjB;AAAyB;AAAE;AAAE;AAAE;;AAACD,IAAAA,MAAM,CAACR,OAAP,GAAiBM,GAAjB;AAAsB,WAAOE,MAAP;AAAgB;AAAE;;AAExd,MAAMS,OAAO,GAAG;AACdC,EAAAA,KAAK,CAACC,IAAD,EAAOC,KAAP,EAAc;AACjB,QAAIA,KAAK,CAACC,IAAN,KAAe,KAAnB,EAA0BF,IAAI,CAACG,IAAL;AAC3B,GAHa;;AAKdC,EAAAA,QAAQ,CAACJ,IAAD,EAAO;AACbA,IAAAA,IAAI,CAACG,IAAL;AACD,GAPa;;AASdE,EAAAA,mBAAmB,CAACL,IAAD,EAAOC,KAAP,EAAc;AAC/B,QAAIA,KAAK,CAACC,IAAN,IAAcF,IAAI,CAACM,IAAL,CAAUJ,IAAV,KAAmBD,KAAK,CAACC,IAA3C,EAAiD;AACjD,UAAMK,KAAK,GAAG,EAAd;AACA,UAAMC,YAAY,GAAGR,IAAI,CAACJ,GAAL,CAAS,cAAT,CAArB;AACA,QAAIa,OAAJ;;AAEA,SAAK,MAAMC,MAAX,IAAqBF,YAArB,EAAmC;AACjCC,MAAAA,OAAO,GAAGC,MAAM,CAACJ,IAAP,CAAYK,EAAtB;;AAEA,UAAID,MAAM,CAACJ,IAAP,CAAYM,IAAhB,EAAsB;AACpBL,QAAAA,KAAK,CAACM,IAAN,CAAW9B,CAAC,GAAG+B,mBAAJ,CAAwB/B,CAAC,GAAGgC,oBAAJ,CAAyB,GAAzB,EAA8BL,MAAM,CAACJ,IAAP,CAAYK,EAA1C,EAA8CD,MAAM,CAACJ,IAAP,CAAYM,IAA1D,CAAxB,CAAX;AACD;;AAED,WAAK,MAAMI,IAAX,IAAmBvC,MAAM,CAACwC,IAAP,CAAYP,MAAM,CAACQ,qBAAP,EAAZ,CAAnB,EAAgE;AAC9DjB,QAAAA,KAAK,CAACkB,IAAN,CAAWpC,CAAC,GAAGqC,UAAJ,CAAeJ,IAAf,CAAX,EAAiCA,IAAjC,EAAuCN,MAAM,CAACJ,IAAP,CAAYM,IAAZ,KAAqB,IAA5D;AACD;AACF;;AAED,QAAIZ,IAAI,CAACqB,UAAL,CAAgBC,KAAhB,CAAsB;AACxBC,MAAAA,IAAI,EAAEvB,IAAI,CAACM;AADa,KAAtB,CAAJ,EAEI;AACFN,MAAAA,IAAI,CAACwB,WAAL,CAAiBf,OAAjB;AACD,KAJD,MAIO;AACLT,MAAAA,IAAI,CAACyB,mBAAL,CAAyBlB,KAAzB;AACD;AACF;;AAlCa,CAAhB;;AAsCA,SAASzB,QAAT,CAAkBkB,IAAlB,EAAwBmB,IAAxB,EAA8BjB,IAAI,GAAG,KAArC,EAA4C;AAC1CF,EAAAA,IAAI,CAAC0B,QAAL,CAAc5B,OAAd,EAAuB;AACrBI,IAAAA,IADqB;AAErBiB,IAAAA;AAFqB,GAAvB;AAID","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nfunction t() {\n  const data = _interopRequireWildcard(require(\"@babel/types\"));\n\n  t = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nconst visitor = {\n  Scope(path, state) {\n    if (state.kind === \"let\") path.skip();\n  },\n\n  Function(path) {\n    path.skip();\n  },\n\n  VariableDeclaration(path, state) {\n    if (state.kind && path.node.kind !== state.kind) return;\n    const nodes = [];\n    const declarations = path.get(\"declarations\");\n    let firstId;\n\n    for (const declar of declarations) {\n      firstId = declar.node.id;\n\n      if (declar.node.init) {\n        nodes.push(t().expressionStatement(t().assignmentExpression(\"=\", declar.node.id, declar.node.init)));\n      }\n\n      for (const name of Object.keys(declar.getBindingIdentifiers())) {\n        state.emit(t().identifier(name), name, declar.node.init !== null);\n      }\n    }\n\n    if (path.parentPath.isFor({\n      left: path.node\n    })) {\n      path.replaceWith(firstId);\n    } else {\n      path.replaceWithMultiple(nodes);\n    }\n  }\n\n};\n\nfunction _default(path, emit, kind = \"var\") {\n  path.traverse(visitor, {\n    kind,\n    emit\n  });\n}"],"file":"index.js"}
{"version":3,"sources":["../../../../../node_modules/@babel/helper-module-transforms/lib/rewrite-live-references.js"],"names":["Object","defineProperty","exports","value","default","rewriteLiveReferences","_assert","data","_interopRequireDefault","require","t","_interopRequireWildcard","_template","_helperSimpleAccess","obj","__esModule","newObj","key","prototype","hasOwnProperty","call","desc","getOwnPropertyDescriptor","get","set","programPath","metadata","imported","Map","exported","requeueInParent","path","requeue","source","localName","importName","imports","importsNamespace","local","exportMeta","push","names","traverse","rewriteBindingInitVisitor","scope","Set","Array","from","keys","rewriteReferencesVisitor","seen","WeakSet","buildImportReference","identNode","meta","lazy","callExpression","namespace","identifier","name","memberExpression","ClassProperty","skip","Function","ClassDeclaration","id","node","Error","exportNames","length","statement","expressionStatement","buildBindingExportAssignmentExpression","_blockHoist","insertAfter","VariableDeclaration","getOuterBindingIdentifiers","forEach","localExpr","reduce","expr","exportName","assignmentExpression","buildImportThrow","expression","ast","ReferencedIdentifier","has","add","localBinding","getBinding","rootBinding","importData","ref","loc","parentPath","isCallExpression","callee","isMemberExpression","replaceWith","sequenceExpression","numericLiteral","isJSXIdentifier","object","property","JSXMemberExpression","JSXIdentifier","AssignmentExpression","exit","left","isIdentifier","exportedNames","operator","assignment","right","ids","filter","pop","items","isExpressionStatement"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = rewriteLiveReferences;\n\nfunction _assert() {\n  const data = _interopRequireDefault(require(\"assert\"));\n\n  _assert = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction t() {\n  const data = _interopRequireWildcard(require(\"@babel/types\"));\n\n  t = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _template() {\n  const data = _interopRequireDefault(require(\"@babel/template\"));\n\n  _template = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _helperSimpleAccess() {\n  const data = _interopRequireDefault(require(\"@babel/helper-simple-access\"));\n\n  _helperSimpleAccess = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction rewriteLiveReferences(programPath, metadata) {\n  const imported = new Map();\n  const exported = new Map();\n\n  const requeueInParent = path => {\n    programPath.requeue(path);\n  };\n\n  for (const [source, data] of metadata.source) {\n    for (const [localName, importName] of data.imports) {\n      imported.set(localName, [source, importName, null]);\n    }\n\n    for (const localName of data.importsNamespace) {\n      imported.set(localName, [source, null, localName]);\n    }\n  }\n\n  for (const [local, data] of metadata.local) {\n    let exportMeta = exported.get(local);\n\n    if (!exportMeta) {\n      exportMeta = [];\n      exported.set(local, exportMeta);\n    }\n\n    exportMeta.push(...data.names);\n  }\n\n  programPath.traverse(rewriteBindingInitVisitor, {\n    metadata,\n    requeueInParent,\n    scope: programPath.scope,\n    exported\n  });\n  (0, _helperSimpleAccess().default)(programPath, new Set([...Array.from(imported.keys()), ...Array.from(exported.keys())]));\n  programPath.traverse(rewriteReferencesVisitor, {\n    seen: new WeakSet(),\n    metadata,\n    requeueInParent,\n    scope: programPath.scope,\n    imported,\n    exported,\n    buildImportReference: ([source, importName, localName], identNode) => {\n      const meta = metadata.source.get(source);\n\n      if (localName) {\n        if (meta.lazy) identNode = t().callExpression(identNode, []);\n        return identNode;\n      }\n\n      let namespace = t().identifier(meta.name);\n      if (meta.lazy) namespace = t().callExpression(namespace, []);\n      return t().memberExpression(namespace, t().identifier(importName));\n    }\n  });\n}\n\nconst rewriteBindingInitVisitor = {\n  ClassProperty(path) {\n    path.skip();\n  },\n\n  Function(path) {\n    path.skip();\n  },\n\n  ClassDeclaration(path) {\n    const {\n      requeueInParent,\n      exported,\n      metadata\n    } = this;\n    const {\n      id\n    } = path.node;\n    if (!id) throw new Error(\"Expected class to have a name\");\n    const localName = id.name;\n    const exportNames = exported.get(localName) || [];\n\n    if (exportNames.length > 0) {\n      const statement = t().expressionStatement(buildBindingExportAssignmentExpression(metadata, exportNames, t().identifier(localName)));\n      statement._blockHoist = path.node._blockHoist;\n      requeueInParent(path.insertAfter(statement)[0]);\n    }\n  },\n\n  VariableDeclaration(path) {\n    const {\n      requeueInParent,\n      exported,\n      metadata\n    } = this;\n    Object.keys(path.getOuterBindingIdentifiers()).forEach(localName => {\n      const exportNames = exported.get(localName) || [];\n\n      if (exportNames.length > 0) {\n        const statement = t().expressionStatement(buildBindingExportAssignmentExpression(metadata, exportNames, t().identifier(localName)));\n        statement._blockHoist = path.node._blockHoist;\n        requeueInParent(path.insertAfter(statement)[0]);\n      }\n    });\n  }\n\n};\n\nconst buildBindingExportAssignmentExpression = (metadata, exportNames, localExpr) => {\n  return (exportNames || []).reduce((expr, exportName) => {\n    return t().assignmentExpression(\"=\", t().memberExpression(t().identifier(metadata.exportName), t().identifier(exportName)), expr);\n  }, localExpr);\n};\n\nconst buildImportThrow = localName => {\n  return _template().default.expression.ast`\n    (function() {\n      throw new Error('\"' + '${localName}' + '\" is read-only.');\n    })()\n  `;\n};\n\nconst rewriteReferencesVisitor = {\n  ReferencedIdentifier(path) {\n    const {\n      seen,\n      buildImportReference,\n      scope,\n      imported,\n      requeueInParent\n    } = this;\n    if (seen.has(path.node)) return;\n    seen.add(path.node);\n    const localName = path.node.name;\n    const localBinding = path.scope.getBinding(localName);\n    const rootBinding = scope.getBinding(localName);\n    if (rootBinding !== localBinding) return;\n    const importData = imported.get(localName);\n\n    if (importData) {\n      const ref = buildImportReference(importData, path.node);\n      ref.loc = path.node.loc;\n\n      if (path.parentPath.isCallExpression({\n        callee: path.node\n      }) && t().isMemberExpression(ref)) {\n        path.replaceWith(t().sequenceExpression([t().numericLiteral(0), ref]));\n      } else if (path.isJSXIdentifier() && t().isMemberExpression(ref)) {\n        const {\n          object,\n          property\n        } = ref;\n        path.replaceWith(t().JSXMemberExpression(t().JSXIdentifier(object.name), t().JSXIdentifier(property.name)));\n      } else {\n        path.replaceWith(ref);\n      }\n\n      requeueInParent(path);\n      path.skip();\n    }\n  },\n\n  AssignmentExpression: {\n    exit(path) {\n      const {\n        scope,\n        seen,\n        imported,\n        exported,\n        requeueInParent,\n        buildImportReference\n      } = this;\n      if (seen.has(path.node)) return;\n      seen.add(path.node);\n      const left = path.get(\"left\");\n\n      if (left.isIdentifier()) {\n        const localName = left.node.name;\n\n        if (scope.getBinding(localName) !== path.scope.getBinding(localName)) {\n          return;\n        }\n\n        const exportedNames = exported.get(localName) || [];\n        const importData = imported.get(localName);\n\n        if (exportedNames.length > 0 || importData) {\n          (0, _assert().default)(path.node.operator === \"=\", \"Path was not simplified\");\n          const assignment = path.node;\n\n          if (importData) {\n            assignment.left = buildImportReference(importData, assignment.left);\n            assignment.right = t().sequenceExpression([assignment.right, buildImportThrow(localName)]);\n          }\n\n          path.replaceWith(buildBindingExportAssignmentExpression(this.metadata, exportedNames, assignment));\n          requeueInParent(path);\n        }\n      } else if (left.isMemberExpression()) {} else {\n        const ids = left.getOuterBindingIdentifiers();\n        const id = Object.keys(ids).filter(localName => imported.has(localName)).pop();\n\n        if (id) {\n          path.node.right = t().sequenceExpression([path.node.right, buildImportThrow(id)]);\n        }\n\n        const items = [];\n        Object.keys(ids).forEach(localName => {\n          if (scope.getBinding(localName) !== path.scope.getBinding(localName)) {\n            return;\n          }\n\n          const exportedNames = exported.get(localName) || [];\n\n          if (exportedNames.length > 0) {\n            items.push(buildBindingExportAssignmentExpression(this.metadata, exportedNames, t().identifier(localName)));\n          }\n        });\n\n        if (items.length > 0) {\n          let node = t().sequenceExpression(items);\n\n          if (path.parentPath.isExpressionStatement()) {\n            node = t().expressionStatement(node);\n            node._blockHoist = path.parentPath.node._blockHoist;\n          }\n\n          const statement = path.insertAfter(node)[0];\n          requeueInParent(statement);\n        }\n      }\n    }\n\n  }\n};"],"file":"rewrite-live-references.js"}
{"version":3,"sources":["../../../../../../../node_modules/@babel/core/lib/config/files/utils.js"],"names":["Object","defineProperty","exports","value","makeStaticFileCache","_fs","data","_interopRequireDefault","require","_caching","obj","__esModule","default","fn","makeStrongCache","filepath","cache","invalidate","fileMtime","forever","readFileSync","statSync","mtime","e","code"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,mBAAR,GAA8BA,mBAA9B;;AAEA,SAASC,GAAT,GAAe;AACb,QAAMC,IAAI,GAAGC,sBAAsB,CAACC,OAAO,CAAC,IAAD,CAAR,CAAnC;;AAEAH,EAAAA,GAAG,GAAG,YAAY;AAChB,WAAOC,IAAP;AACD,GAFD;;AAIA,SAAOA,IAAP;AACD;;AAED,IAAIG,QAAQ,GAAGD,OAAO,CAAC,YAAD,CAAtB;;AAEA,SAASD,sBAAT,CAAgCG,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEE,IAAAA,OAAO,EAAEF;AAAX,GAArC;AAAwD;;AAE/F,SAASN,mBAAT,CAA6BS,EAA7B,EAAiC;AAC/B,SAAO,CAAC,GAAGJ,QAAQ,CAACK,eAAb,EAA8B,CAACC,QAAD,EAAWC,KAAX,KAAqB;AACxD,QAAIA,KAAK,CAACC,UAAN,CAAiB,MAAMC,SAAS,CAACH,QAAD,CAAhC,MAAgD,IAApD,EAA0D;AACxDC,MAAAA,KAAK,CAACG,OAAN;AACA,aAAO,IAAP;AACD;;AAED,WAAON,EAAE,CAACE,QAAD,EAAWV,GAAG,GAAGO,OAAN,CAAcQ,YAAd,CAA2BL,QAA3B,EAAqC,MAArC,CAAX,CAAT;AACD,GAPM,CAAP;AAQD;;AAED,SAASG,SAAT,CAAmBH,QAAnB,EAA6B;AAC3B,MAAI;AACF,WAAO,CAACV,GAAG,GAAGO,OAAN,CAAcS,QAAd,CAAuBN,QAAvB,EAAiCO,KAAzC;AACD,GAFD,CAEE,OAAOC,CAAP,EAAU;AACV,QAAIA,CAAC,CAACC,IAAF,KAAW,QAAX,IAAuBD,CAAC,CAACC,IAAF,KAAW,SAAtC,EAAiD,MAAMD,CAAN;AAClD;;AAED,SAAO,IAAP;AACD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.makeStaticFileCache = makeStaticFileCache;\n\nfunction _fs() {\n  const data = _interopRequireDefault(require(\"fs\"));\n\n  _fs = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _caching = require(\"../caching\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction makeStaticFileCache(fn) {\n  return (0, _caching.makeStrongCache)((filepath, cache) => {\n    if (cache.invalidate(() => fileMtime(filepath)) === null) {\n      cache.forever();\n      return null;\n    }\n\n    return fn(filepath, _fs().default.readFileSync(filepath, \"utf8\"));\n  });\n}\n\nfunction fileMtime(filepath) {\n  try {\n    return +_fs().default.statSync(filepath).mtime;\n  } catch (e) {\n    if (e.code !== \"ENOENT\" && e.code !== \"ENOTDIR\") throw e;\n  }\n\n  return null;\n}"],"file":"utils.js"}
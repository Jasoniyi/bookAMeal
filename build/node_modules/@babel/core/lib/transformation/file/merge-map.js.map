{"version":3,"sources":["../../../../../../../node_modules/@babel/core/lib/transformation/file/merge-map.js"],"names":["Object","defineProperty","exports","value","default","mergeSourceMap","_sourceMap","data","_interopRequireDefault","require","obj","__esModule","inputMap","map","input","buildMappingData","output","mergedGenerator","SourceMapGenerator","_ref","sources","source","content","setSourceContent","path","length","defaultSource","insertedMappings","Map","eachInputGeneratedRange","generated","original","eachOverlappingGeneratedOutputRange","item","key","makeMappingKey","has","set","addMapping","line","column","columnStart","name","values","columnEnd","Infinity","clearItem","result","toJSON","sourceRoot","outputFile","inputGeneratedRange","callback","overlappingOriginal","filterApplicableOriginalRanges","_ref2","mappings","filterSortedArray","outOriginal","_ref3","_ref4","consumer","SourceMapConsumer","assign","last","computeColumnSpans","eachMapping","m","originalLine","get","sourceContentFor","sourceData","originalColumn","mapping","push","allGeneratedPositionsFor","lastColumn","ORIGINAL_ORDER","file","Array","from","findInsertionLocation","array","left","right","mid","Math","floor","i","start","results"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = mergeSourceMap;\n\nfunction _sourceMap() {\n  const data = _interopRequireDefault(require(\"source-map\"));\n\n  _sourceMap = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction mergeSourceMap(inputMap, map) {\n  const input = buildMappingData(inputMap);\n  const output = buildMappingData(map);\n  const mergedGenerator = new (_sourceMap().default.SourceMapGenerator)();\n\n  for (const _ref of input.sources) {\n    const {\n      source\n    } = _ref;\n\n    if (typeof source.content === \"string\") {\n      mergedGenerator.setSourceContent(source.path, source.content);\n    }\n  }\n\n  if (output.sources.length === 1) {\n    const defaultSource = output.sources[0];\n    const insertedMappings = new Map();\n    eachInputGeneratedRange(input, (generated, original, source) => {\n      eachOverlappingGeneratedOutputRange(defaultSource, generated, item => {\n        const key = makeMappingKey(item);\n        if (insertedMappings.has(key)) return;\n        insertedMappings.set(key, item);\n        mergedGenerator.addMapping({\n          source: source.path,\n          original: {\n            line: original.line,\n            column: original.columnStart\n          },\n          generated: {\n            line: item.line,\n            column: item.columnStart\n          },\n          name: original.name\n        });\n      });\n    });\n\n    for (const item of insertedMappings.values()) {\n      if (item.columnEnd === Infinity) {\n        continue;\n      }\n\n      const clearItem = {\n        line: item.line,\n        columnStart: item.columnEnd\n      };\n      const key = makeMappingKey(clearItem);\n\n      if (insertedMappings.has(key)) {\n        continue;\n      }\n\n      mergedGenerator.addMapping({\n        generated: {\n          line: clearItem.line,\n          column: clearItem.columnStart\n        }\n      });\n    }\n  }\n\n  const result = mergedGenerator.toJSON();\n\n  if (typeof input.sourceRoot === \"string\") {\n    result.sourceRoot = input.sourceRoot;\n  }\n\n  return result;\n}\n\nfunction makeMappingKey(item) {\n  return `${item.line}/${item.columnStart}`;\n}\n\nfunction eachOverlappingGeneratedOutputRange(outputFile, inputGeneratedRange, callback) {\n  const overlappingOriginal = filterApplicableOriginalRanges(outputFile, inputGeneratedRange);\n\n  for (const _ref2 of overlappingOriginal) {\n    const {\n      generated\n    } = _ref2;\n\n    for (const item of generated) {\n      callback(item);\n    }\n  }\n}\n\nfunction filterApplicableOriginalRanges({\n  mappings\n}, {\n  line,\n  columnStart,\n  columnEnd\n}) {\n  return filterSortedArray(mappings, ({\n    original: outOriginal\n  }) => {\n    if (line > outOriginal.line) return -1;\n    if (line < outOriginal.line) return 1;\n    if (columnStart >= outOriginal.columnEnd) return -1;\n    if (columnEnd <= outOriginal.columnStart) return 1;\n    return 0;\n  });\n}\n\nfunction eachInputGeneratedRange(map, callback) {\n  for (const _ref3 of map.sources) {\n    const {\n      source,\n      mappings\n    } = _ref3;\n\n    for (const _ref4 of mappings) {\n      const {\n        original,\n        generated\n      } = _ref4;\n\n      for (const item of generated) {\n        callback(item, original, source);\n      }\n    }\n  }\n}\n\nfunction buildMappingData(map) {\n  const consumer = new (_sourceMap().default.SourceMapConsumer)(Object.assign({}, map, {\n    sourceRoot: null\n  }));\n  const sources = new Map();\n  const mappings = new Map();\n  let last = null;\n  consumer.computeColumnSpans();\n  consumer.eachMapping(m => {\n    if (m.originalLine === null) return;\n    let source = sources.get(m.source);\n\n    if (!source) {\n      source = {\n        path: m.source,\n        content: consumer.sourceContentFor(m.source, true)\n      };\n      sources.set(m.source, source);\n    }\n\n    let sourceData = mappings.get(source);\n\n    if (!sourceData) {\n      sourceData = {\n        source,\n        mappings: []\n      };\n      mappings.set(source, sourceData);\n    }\n\n    const obj = {\n      line: m.originalLine,\n      columnStart: m.originalColumn,\n      columnEnd: Infinity,\n      name: m.name\n    };\n\n    if (last && last.source === source && last.mapping.line === m.originalLine) {\n      last.mapping.columnEnd = m.originalColumn;\n    }\n\n    last = {\n      source,\n      mapping: obj\n    };\n    sourceData.mappings.push({\n      original: obj,\n      generated: consumer.allGeneratedPositionsFor({\n        source: m.source,\n        line: m.originalLine,\n        column: m.originalColumn\n      }).map(item => ({\n        line: item.line,\n        columnStart: item.column,\n        columnEnd: item.lastColumn + 1\n      }))\n    });\n  }, null, _sourceMap().default.SourceMapConsumer.ORIGINAL_ORDER);\n  return {\n    file: map.file,\n    sourceRoot: map.sourceRoot,\n    sources: Array.from(mappings.values())\n  };\n}\n\nfunction findInsertionLocation(array, callback) {\n  let left = 0;\n  let right = array.length;\n\n  while (left < right) {\n    const mid = Math.floor((left + right) / 2);\n    const item = array[mid];\n    const result = callback(item);\n\n    if (result === 0) {\n      left = mid;\n      break;\n    }\n\n    if (result >= 0) {\n      right = mid;\n    } else {\n      left = mid + 1;\n    }\n  }\n\n  let i = left;\n\n  if (i < array.length) {\n    while (i >= 0 && callback(array[i]) >= 0) {\n      i--;\n    }\n\n    return i + 1;\n  }\n\n  return i;\n}\n\nfunction filterSortedArray(array, callback) {\n  const start = findInsertionLocation(array, callback);\n  const results = [];\n\n  for (let i = start; i < array.length && callback(array[i]) === 0; i++) {\n    results.push(array[i]);\n  }\n\n  return results;\n}"],"file":"merge-map.js"}